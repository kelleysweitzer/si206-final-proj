import matplotlib
import matplotlib.pyplot as plt 
import sqlite3
import json

conn = sqlite3.connect("songlist.db")
cur = conn.cursor()

def tone_number(databse):

    #initializes the variables
    tone_dict = {}
    tentative = 0
    analytical = 0
    sadness = 0
    joy = 0 
    anger = 0 
    confident = 0
    fear = 0 

    #getting total number of tentative songs
    tentative_songs = cur.execute('SELECT title, artist, primary_tone, primary_score FROM tonelist WHERE primary_tone = "Tentative"')
    for row in tentative_songs: 
        tentative += 1
    tone_dict["Tentative"] = tentative 

    #getting total number of analytical songs 
    analytical_songs = cur.execute('SELECT title, artist, primary_tone, primary_score FROM tonelist WHERE primary_tone = "Analytical"')
    for row in analytical_songs: 
        analytical += 1
    tone_dict["Analytical"] = analytical 

    #getting total number of sadness songs 
    sadness_songs = cur.execute('SELECT title, artist, primary_tone, primary_score FROM tonelist WHERE primary_tone = "Sadness"')
    for row in sadness_songs: 
        sadness += 1
    tone_dict["Sadness"] = sadness 

    #getting total number of joy songs 
    joy_songs = cur.execute('SELECT title, artist, primary_tone, primary_score FROM tonelist WHERE primary_tone = "Joy"')
    for row in joy_songs: 
        joy += 1
    tone_dict["Joy"] = joy

    #getting total number of angry songs 
    anger_songs = cur.execute('SELECT title, artist, primary_tone, primary_score FROM tonelist WHERE primary_tone = "Anger"')
    for row in anger_songs: 
        anger += 1
    tone_dict["Anger"] = anger  

    #getting total number of confident songs and average primary_score
    confident_songs = cur.execute('SELECT title, artist, primary_tone, primary_score FROM tonelist WHERE primary_tone = "Confident"')
    for row in confident_songs: 
        confident += 1
    tone_dict["Confident"] = confident

    #getting total number of fear songs and average primary_score
    fear_songs = cur.execute('SELECT title, artist, primary_tone, primary_score FROM tonelist WHERE primary_tone = "Fear"')
    for row in fear_songs: 
        fear += 1
    tone_dict["Fear"] = fear

    return tone_dict

def tone_number_visualization(tone_dict):
    #sets lists that will be used for x and y values
    names = tone_dict.keys()
    vals = tone_dict.values()
    
    #creates graph
    fig, ax = plt.subplots()
    
    #gives value for graph and sets color of each bar
    plt.bar(names, vals, color = ['red', 'blue', 'cyan', 'yellow', 'pink', 'green', 'orange'])

    #sets more information for graph axis
    ax.set_xlabel("Tone Name")
    ax.set_ylabel("# of Songs")
    ax.set_title("Songs per Tone")

    #presents the graph
    plt.show()

#number of songs per tone bar graph 
tone_dict = tone_number('songlist.db')
tone_number_visualization(tone_dict)